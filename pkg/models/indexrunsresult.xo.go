package models

// Code generated by xo. DO NOT EDIT.

import (
	"context"
)

// IndexRunsResult represents a row from 'index_runs_result'.
type IndexRunsResult struct {
	ID string `json:"id"` // id
}

// GetIndexRunsResults runs a custom query, returning results as IndexRunsResult.
func GetIndexRunsResults(ctx context.Context, db DB) ([]*IndexRunsResult, error) {
	// query
	const sqlstr = `SELECT id FROM runs ORDER BY start_time DESC LIMIT 50`
	// run
	logf(sqlstr)
	rows, err := db.QueryContext(ctx, sqlstr)
	if err != nil {
		return nil, logerror(err)
	}
	defer rows.Close()
	// load results
	var res []*IndexRunsResult
	for rows.Next() {
		var irr IndexRunsResult
		// scan
		if err := rows.Scan(&irr.ID); err != nil {
			return nil, logerror(err)
		}
		res = append(res, &irr)
	}
	if err := rows.Err(); err != nil {
		return nil, logerror(err)
	}
	return res, nil
}
