package models

// Code generated by xo. DO NOT EDIT.

import (
	"context"
)

// ThunkListing represents a row from 'thunk_listing'.
type ThunkListing struct {
	Digest string `json:"digest"` // digest
	JSON   []byte `json:"json"`   // json
}

// GetThunkListings runs a custom query, returning results as ThunkListing.
func GetThunkListings(ctx context.Context, db DB) ([]*ThunkListing, error) {
	// query
	const sqlstr = `SELECT digest, json FROM thunks`
	// run
	logf(sqlstr)
	rows, err := db.QueryContext(ctx, sqlstr)
	if err != nil {
		return nil, logerror(err)
	}
	defer rows.Close()
	// load results
	var res []*ThunkListing
	for rows.Next() {
		var tl ThunkListing
		// scan
		if err := rows.Scan(&tl.Digest, &tl.JSON); err != nil {
			return nil, logerror(err)
		}
		res = append(res, &tl)
	}
	if err := rows.Err(); err != nil {
		return nil, logerror(err)
	}
	return res, nil
}
