package models

// Code generated by xo. DO NOT EDIT.

import (
	"context"
)

// FindRunResult represents a row from 'find_run_result'.
type FindRunResult struct {
	ID string `json:"id"` // id
}

// FindRunResultsByPathValue runs a custom query, returning results as FindRunResult.
func FindRunResultsByPathValue(ctx context.Context, db DB, path string, value any) ([]*FindRunResult, error) {
	// query
	const sqlstr = `SELECT id FROM runs WHERE json_extract('meta', $1) = $2 ORDER BY start_time DESC LIMIT 50`
	// run
	logf(sqlstr, path, value)
	rows, err := db.QueryContext(ctx, sqlstr, path, value)
	if err != nil {
		return nil, logerror(err)
	}
	defer rows.Close()
	// load results
	var res []*FindRunResult
	for rows.Next() {
		var frr FindRunResult
		// scan
		if err := rows.Scan(&frr.ID); err != nil {
			return nil, logerror(err)
		}
		res = append(res, &frr)
	}
	if err := rows.Err(); err != nil {
		return nil, logerror(err)
	}
	return res, nil
}
